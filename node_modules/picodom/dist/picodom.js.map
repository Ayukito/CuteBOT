{"version":3,"sources":["../src/h.js","../src/patch.js"],"names":["h","type","props","node","stack","children","i","arguments","length","push","Array","isArray","pop","patch","parent","oldNode","newNode","cb","element","patchElement","callbacks","merge","target","source","result","createElement","isSVG","document","createTextNode","createElementNS","oncreate","appendChild","setElementProp","name","value","oldValue","style","_","setAttribute","removeAttribute","updateElement","oldProps","onupdate","removeElement","remove","removeChild","onremove","getKey","key","nextSibling","insertBefore","len","oldLen","oldKeyed","oldElements","keyed","oldElement","childNodes","oldChild","oldKey","j","newChild","newKey","keyedNode","reusableNode","nodeValue"],"mappings":"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","file":"picodom.js","sourcesContent":["export function h(type, props) {\n  var node\n  var stack = []\n  var children = []\n\n  for (var i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n\n  while (stack.length) {\n    if (Array.isArray((node = stack.pop()))) {\n      for (i = node.length; i--; ) {\n        stack.push(node[i])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(typeof node === \"number\" ? (node = node + \"\") : node)\n    }\n  }\n\n  return typeof type === \"string\"\n    ? {\n        type: type,\n        props: props || {},\n        children: children\n      }\n    : type(props || {}, children)\n}\n","var callbacks = []\n\nexport function patch(parent, oldNode, newNode) {\n  var element = patchElement(\n    parent,\n    parent.children[0],\n    oldNode,\n    newNode\n  )\n\n  for (var cb; (cb = callbacks.pop()); cb()) {}\n\n  return element\n}\n\nfunction merge(target, source) {\n  var result = {}\n\n  for (var i in target) {\n    result[i] = target[i]\n  }\n  for (var i in source) {\n    result[i] = source[i]\n  }\n\n  return result\n}\n\nfunction createElement(node, isSVG) {\n  if (typeof node === \"string\") {\n    var element = document.createTextNode(node)\n  } else {\n    var element = (isSVG = isSVG || node.type === \"svg\")\n      ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n      : document.createElement(node.type)\n\n    if (node.props && node.props.oncreate) {\n      callbacks.push(function() {\n        node.props.oncreate(element)\n      })\n    }\n\n    for (var i = 0; i < node.children.length; i++) {\n      element.appendChild(createElement(node.children[i], isSVG))\n    }\n\n    for (var i in node.props) {\n      setElementProp(element, i, node.props[i])\n    }\n  }\n  return element\n}\n\nfunction setElementProp(element, name, value, oldValue) {\n  if (name === \"key\") {\n  } else if (name === \"style\") {\n    for (var name in merge(oldValue, (value = value || {}))) {\n      element.style[name] = value[name] || \"\"\n    }\n  } else {\n    try {\n      element[name] = value\n    } catch (_) {}\n\n    if (typeof value !== \"function\") {\n      if (value) {\n        element.setAttribute(name, value)\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n\nfunction updateElement(element, oldProps, props) {\n  for (var i in merge(oldProps, props)) {\n    var value = props[i]\n    var oldValue = i === \"value\" || i === \"checked\" ? element[i] : oldProps[i]\n\n    if (value !== oldValue) {\n      setElementProp(element, i, value, oldValue)\n    }\n  }\n\n  if (props && props.onupdate) {\n    callbacks.push(function() {\n      props.onupdate(element, oldProps)\n    })\n  }\n}\n\nfunction removeElement(parent, element, props) {\n  if (\n    props &&\n    props.onremove &&\n    typeof (props = props.onremove(element)) === \"function\"\n  ) {\n    props(remove)\n  } else {\n    remove()\n  }\n\n  function remove() {\n    parent.removeChild(element)\n  }\n}\n\nfunction getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n\nfunction patchElement(parent, element, oldNode, node, isSVG, nextSibling) {\n  if (oldNode == null) {\n    element = parent.insertBefore(createElement(node, isSVG), element)\n  } else if (node.type != null && node.type === oldNode.type) {\n    updateElement(element, oldNode.props, node.props)\n\n    isSVG = isSVG || node.type === \"svg\"\n\n    var len = node.children.length\n    var oldLen = oldNode.children.length\n    var oldKeyed = {}\n    var oldElements = []\n    var keyed = {}\n\n    for (var i = 0; i < oldLen; i++) {\n      var oldElement = (oldElements[i] = element.childNodes[i])\n      var oldChild = oldNode.children[i]\n      var oldKey = getKey(oldChild)\n\n      if (null != oldKey) {\n        oldKeyed[oldKey] = [oldElement, oldChild]\n      }\n    }\n\n    var i = 0\n    var j = 0\n\n    while (j < len) {\n      var oldElement = oldElements[i]\n      var oldChild = oldNode.children[i]\n      var newChild = node.children[j]\n\n      var oldKey = getKey(oldChild)\n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n\n      var newKey = getKey(newChild)\n\n      var keyedNode = oldKeyed[newKey] || []\n\n      if (null == newKey) {\n        if (null == oldKey) {\n          patchElement(element, oldElement, oldChild, newChild, isSVG)\n          j++\n        }\n        i++\n      } else {\n        if (oldKey === newKey) {\n          patchElement(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n          i++\n        } else if (keyedNode[0]) {\n          element.insertBefore(keyedNode[0], oldElement)\n          patchElement(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n        } else {\n          patchElement(element, oldElement, null, newChild, isSVG)\n        }\n\n        j++\n        keyed[newKey] = newChild\n      }\n    }\n\n    while (i < oldLen) {\n      var oldChild = oldNode.children[i]\n      var oldKey = getKey(oldChild)\n      if (null == oldKey) {\n        removeElement(element, oldElements[i], oldChild.props)\n      }\n      i++\n    }\n\n    for (var i in oldKeyed) {\n      var keyedNode = oldKeyed[i]\n      var reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0], reusableNode.props)\n      }\n    }\n  } else if (element && node !== element.nodeValue) {\n    if (typeof node === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = node\n    } else {\n      element = parent.insertBefore(\n        createElement(node, isSVG),\n        (nextSibling = element)\n      )\n      removeElement(parent, nextSibling, oldNode.props)\n    }\n  }\n  return element\n}\n"]}